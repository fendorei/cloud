{"ast":null,"code":"var _jsxFileName = \"/Users/antoineluta/Documents/GitHub/cloud/App.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  _s();\n\n  var _useState = useState(false),\n      db = _useState[0],\n      setInfluencer = _useState[1];\n\n  useEffect(function () {\n    getInfluencer();\n  }, []);\n\n  function getInfluencer() {\n    fetch('http://localhost:3001').then(function (response) {\n      return response.text();\n    }).then(function (data) {\n      setInfluencer(data);\n    });\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, db ? db : 'There is no influencer data available');\n}\n\n_s(App, \"C8Ey+zKyFbLwKj+XUA7qFACFxmg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/antoineluta/Documents/GitHub/cloud/App.js"],"names":["React","useState","useEffect","App","db","setInfluencer","getInfluencer","fetch","then","response","text","data"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAAA,kBACeF,QAAQ,CAAC,KAAD,CADvB;AAAA,MACNG,EADM;AAAA,MACFC,aADE;;AAEbH,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;;AAGA,WAASA,aAAT,GAAyB;AACvBC,IAAAA,KAAK,CAAC,uBAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHH,EAIGF,IAJH,CAIQ,UAAAG,IAAI,EAAI;AACZN,MAAAA,aAAa,CAACM,IAAD,CAAb;AACD,KANH;AAOD;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,EAAE,GAAGA,EAAH,GAAQ,uCADb,CADF;AAKD;;GAnBQD,G;;KAAAA,G;AAoBT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nfunction App() {\n  const [db, setInfluencer] = useState(false);\n  useEffect(() => {\n    getInfluencer();\n  }, []);\n  function getInfluencer() {\n    fetch('http://localhost:3001')\n      .then(response => {\n        return response.text();\n      })\n      .then(data => {\n        setInfluencer(data);\n      });\n  }\n  return (\n    <div>\n      {db ? db : 'There is no influencer data available'}\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}